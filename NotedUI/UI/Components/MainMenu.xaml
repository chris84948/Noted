<UserControl x:Class="NotedUI.UI.Components.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ab="clr-namespace:NotedUI.AttachedBehaviors"
             xmlns:conv="clr-namespace:NotedUI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NotedUI.UI.Components"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="Me"
             Height="60"
             mc:Ignorable="d">

    <UserControl.Resources>

        <Style x:Key="PopupButtonStyle"
               BasedOn="{StaticResource TextButton}"
               TargetType="Button">
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
            <Setter Property="Height" Value="40" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Padding" Value="20,5" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>

    </UserControl.Resources>

    <StackPanel Grid.Row="0"
                Grid.ColumnSpan="2"
                Panel.ZIndex="1"
                Background="{StaticResource AppTopBannerBrush}"
                Orientation="Horizontal">
        <StackPanel.Resources>
            <Style BasedOn="{StaticResource IconTextButton}"
                   TargetType="Button">
                <Setter Property="FontFamily" Value="{StaticResource ButtonFont}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="{StaticResource TitleFontWeight}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="70" />
                <Setter Property="ab:ButtonBehaviors.IconSize" Value="18" />
            </Style>

            <Style BasedOn="{StaticResource IconTextToggleButton}"
                   TargetType="ToggleButton">
                <Setter Property="FontFamily" Value="{StaticResource ButtonFont}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="{StaticResource TitleFontWeight}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="70" />
                <Setter Property="ab:ButtonBehaviors.IconSize" Value="18" />
            </Style>
        </StackPanel.Resources>

        <Button x:Name="buttonNoted"
                Width="140"
                VerticalAlignment="Stretch"
                Click="buttonNoted_Click"
                Content="noted"
                FontFamily="{StaticResource TitleFont}"
                FontSize="40"
                FontWeight="{StaticResource TitleFontWeight}"
                Foreground="{StaticResource ButtonForegroundBrush}"
                Padding="0,4,2,0"
                Style="{StaticResource TextButton}" />

        <ToggleButton ab:ButtonBehaviors.Icon="{StaticResource SearchIcon}"
                      Content="SEARCH"
                      IsChecked="{Binding ShowSearch,
                                          ElementName=Me}" />

        <ToggleButton x:Name="buttonAdd"
                      ab:ButtonBehaviors.Icon="{StaticResource AddIcon}"
                      Content="NOTE"
                      IsHitTestVisible="{Binding ElementName=popupAddNote,
                                                 Path=IsOpen,
                                                 Mode=OneWay,
                                                 Converter={StaticResource InvertValueConverter}}" />

        <Popup x:Name="popupAddNote"
               IsOpen="{Binding ElementName=buttonAdd,
                                Path=IsChecked}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=buttonAdd}"
               StaysOpen="False"
               VerticalOffset="-1">

            <ItemsControl Background="{StaticResource ButtonPopupBrush}"
                          ItemsSource="{Binding AllNotes.Groups}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Click="popupAddNote_Click"
                                Content="{Binding Name,
                                                  Converter={StaticResource ToUpperConverter}}"
                                Style="{StaticResource PopupButtonStyle}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Popup>

        <Button x:Name="buttonDelete"
                ab:ButtonBehaviors.Icon="{StaticResource CloseIcon}"
                ab:ButtonBehaviors.IconSize="16"
                Click="buttonDelete_Click"
                Content="DELETE" />

        <Button x:Name="buttonGroup"
                ab:ButtonBehaviors.Icon="{StaticResource GroupIcon}"
                Click="buttonAddGroup_Click"
                Content="GROUP" />

        <ToggleButton x:Name="buttonExport"
                      ab:ButtonBehaviors.Icon="{StaticResource ExportIcon}"
                      Content="EXPORT"
                      IsHitTestVisible="{Binding ElementName=popupExport,
                                                 Path=IsOpen,
                                                 Mode=OneWay,
                                                 Converter={StaticResource InvertValueConverter}}" />

        <Popup x:Name="popupExport"
               IsOpen="{Binding ElementName=buttonExport,
                                Path=IsChecked}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=buttonExport}"
               StaysOpen="False"
               VerticalOffset="-1">

            <StackPanel Background="{StaticResource ButtonPopupBrush}"
                        Orientation="Vertical">
                <Button x:Name="buttonExportHTML"
                        Click="buttonExportHTML_Click"
                        Content="TO HTML"
                        Style="{StaticResource PopupButtonStyle}" />
                <Button x:Name="buttonExportPDF"
                        Click="buttonExportPDF_Click"
                        Content="TO PDF"
                        Style="{StaticResource PopupButtonStyle}" />
            </StackPanel>
        </Popup>

        <ToggleButton x:Name="buttonFormat"
                      Margin="70,0,0,0"
                      ab:ButtonBehaviors.Icon="{StaticResource FormatIcon}"
                      Content="FORMAT"
                      IsChecked="{Binding ShowFormatMenu,
                                          ElementName=Me}" />

        <ToggleButton ab:ButtonBehaviors.Icon="{StaticResource PreviewIcon}"
                      Content="PREVIEW"
                      IsChecked="{Binding ShowPreview,
                                          ElementName=Me}" />

        <Button x:Name="buttonShowSettings"
                Margin="70,0,0,0"
                ab:ButtonBehaviors.Icon="{StaticResource SettingsIcon}"
                Click="buttonShowSettings_Click"
                Content="SETTINGS" />
    </StackPanel>

</UserControl>
