<UserControl x:Class="NotedUI.UI.Components.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ab="clr-namespace:NotedUI.AttachedBehaviors"
             xmlns:conv="clr-namespace:NotedUI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NotedUI.UI.Components"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="Me"
             Height="60"
             mc:Ignorable="d">

    <UserControl.Resources>

        <Style x:Key="PopupButtonStyle"
               BasedOn="{StaticResource TextButton}"
               TargetType="Button">
            <Setter Property="Foreground"
                    Value="{StaticResource ButtonForegroundBrush}" />
            <Setter Property="FontFamily"
                    Value="Montserrat" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="Padding"
                    Value="20,5" />
            <Setter Property="FontSize"
                    Value="12" />
        </Style>

    </UserControl.Resources>

    <StackPanel Grid.Row="0"
                Grid.ColumnSpan="2"
                Panel.ZIndex="1"
                Background="{StaticResource AppTopBannerBrush}"
                Orientation="Horizontal">
        <StackPanel.Resources>
            <Style BasedOn="{StaticResource IconTextButton}"
                   TargetType="Button">
                <Setter Property="Foreground"
                        Value="{StaticResource ButtonForegroundBrush}" />
                <Setter Property="FontFamily"
                        Value="{StaticResource ButtonFont}" />
                <Setter Property="FontWeight"
                        Value="{StaticResource TitleFontWeight}" />
                <Setter Property="VerticalAlignment"
                        Value="Stretch" />
                <Setter Property="Width"
                        Value="70" />
                <Setter Property="FontSize"
                        Value="12" />
                <Setter Property="ab:ButtonBehaviors.IconSize"
                        Value="18" />
            </Style>

            <Style BasedOn="{StaticResource IconTextToggleButton}"
                   TargetType="ToggleButton">
                <Setter Property="Foreground"
                        Value="{StaticResource ButtonForegroundBrush}" />
                <Setter Property="FontFamily"
                        Value="{StaticResource ButtonFont}" />
                <Setter Property="FontWeight"
                        Value="{StaticResource TitleFontWeight}" />
                <Setter Property="VerticalAlignment"
                        Value="Stretch" />
                <Setter Property="Width"
                        Value="70" />
                <Setter Property="FontSize"
                        Value="12" />
                <Setter Property="ab:ButtonBehaviors.IconSize"
                        Value="18" />
            </Style>
        </StackPanel.Resources>

        <Button Width="140"
                VerticalAlignment="Stretch"
                FontFamily="{StaticResource TitleFont}"
                FontSize="40"
                FontWeight="{StaticResource TitleFontWeight}"
                Foreground="{StaticResource ButtonForegroundBrush}"
                Padding="0,4,2,0"
                Style="{StaticResource TextButton}"
                ab:ButtonBehaviors.Text="noted" />

        <ToggleButton IsChecked="{Binding ShowSearch,
                                          ElementName=Me}"
                      ab:ButtonBehaviors.Icon="{StaticResource SearchIcon}"
                      ab:ButtonBehaviors.Text="SEARCH" />

        <Button x:Name="buttonAdd"
                ab:ButtonBehaviors.Icon="{StaticResource AddIcon}"
                ab:ButtonBehaviors.IconSize="16"
                ab:ButtonBehaviors.Text="ADD" />

        <Button ab:ButtonBehaviors.Icon="{StaticResource CloseIcon}"
                ab:ButtonBehaviors.IconSize="16"
                ab:ButtonBehaviors.Text="DELETE" />

        <ToggleButton x:Name="buttonFolder"
                      IsHitTestVisible="{Binding ElementName=popupFolder,
                                                 Path=IsOpen,
                                                 Mode=OneWay,
                                                 Converter={StaticResource InvertValueConverter}}"
                      ab:ButtonBehaviors.Icon="{StaticResource FolderIcon}"
                      ab:ButtonBehaviors.Text="GROUP" />

        <Popup x:Name="popupFolder"
               IsOpen="{Binding ElementName=buttonFolder,
                                Path=IsChecked}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=buttonFolder}"
               StaysOpen="False">

            <StackPanel Background="{StaticResource ButtonPopupBrush}"
                        Orientation="Vertical">
                <Button x:Name="buttonAddFolder"
                        Click="buttonAddFolder_Click"
                        Style="{StaticResource PopupButtonStyle}"
                        ab:ButtonBehaviors.Text="ADD" />
                <Button x:Name="buttonDeleteFolder"
                        Click="buttonDeleteFolder_Click"
                        Style="{StaticResource PopupButtonStyle}"
                        ab:ButtonBehaviors.Text="DELETE" />
            </StackPanel>
        </Popup>

        <ToggleButton x:Name="buttonExport"
                      IsHitTestVisible="{Binding ElementName=popupExport,
                                                 Path=IsOpen,
                                                 Mode=OneWay,
                                                 Converter={StaticResource InvertValueConverter}}"
                      ab:ButtonBehaviors.Icon="{StaticResource ExportIcon}"
                      ab:ButtonBehaviors.Text="EXPORT" />

        <Popup x:Name="popupExport"
               IsOpen="{Binding ElementName=buttonExport,
                                Path=IsChecked}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=buttonExport}"
               StaysOpen="False">

            <StackPanel Background="{StaticResource ButtonPopupBrush}"
                        Orientation="Vertical">
                <Button x:Name="buttonExportHTML"
                        Click="buttonExportHTML_Click"
                        Style="{StaticResource PopupButtonStyle}"
                        ab:ButtonBehaviors.Text="TO HTML" />
                <Button x:Name="buttonExportPDF"
                        Click="buttonExportPDF_Click"
                        Style="{StaticResource PopupButtonStyle}"
                        ab:ButtonBehaviors.Text="TO PDF" />
            </StackPanel>
        </Popup>

        <ToggleButton x:Name="buttonFormat"
                      Margin="70,0,0,0"
                      IsChecked="{Binding ShowFormatMenu,
                                          ElementName=Me}"
                      ab:ButtonBehaviors.Icon="{StaticResource FormatIcon}"
                      ab:ButtonBehaviors.Text="FORMAT" />

        <ToggleButton IsChecked="{Binding ShowPreview,
                                          ElementName=Me}"
                      ab:ButtonBehaviors.Icon="{StaticResource PreviewIcon}"
                      ab:ButtonBehaviors.Text="PREVIEW" />

        <ToggleButton Margin="70,0,0,0"
                      IsChecked="{Binding ShowSettings,
                                          ElementName=Me}"
                      ab:ButtonBehaviors.Icon="{StaticResource SettingsIcon}"
                      ab:ButtonBehaviors.Text="SETTINGS" />
    </StackPanel>

</UserControl>
